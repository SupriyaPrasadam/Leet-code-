class Solution:
    def possibleStringCount(self, word: str, k: int) -> int:
        n: int = len(word)
        left: int = 0
        mod: int = 10 ** 9 + 7
        freq: list[int] = []
        for right in range(n):
            if word[right] != word[left]:
                freq.append(right - left)
                left = right
        freq.append(n - left)
        output: int = 1
        for x in freq:
            output = (output * x) % mod
        if len(freq) >= k: return output
        prev_dp: list[int] = [0] * k
        prev_prefix_sum: list[int] = [1] * k
        for i in range(len(freq)):
            new_dp: list[int] = [0] * k
            for j in range(1, k):
                new_dp[j] = prev_prefix_sum[j - 1]
                if j - freq[i] - 1 >= 0:
                    new_dp[j] = (new_dp[j] - prev_prefix_sum[j - freq[i] - 1] + mod) % mod
            new_prefix_sum: list[int] = [0] * k
            for j in range(1, k):
                new_prefix_sum[j] = (new_prefix_sum[j - 1] + new_dp[j]) % mod
            prev_dp = new_dp
            prev_prefix_sum = new_prefix_sum
        return (output - prev_prefix_sum[k - 1] + mod) % mod
